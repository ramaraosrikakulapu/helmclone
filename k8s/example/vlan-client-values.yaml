# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

global:
  agtConfig: |-
    conf.mod=client
    conf.aid=mCEe9C
    conf.tid=qxRvUQ
    conf.grp=default_Niw23hmxsqgqnZr
    conf.zon=9e768876-7fe6-413c-8330-9e2d7ad42c7b
    conf.sst=https://9e768876-7fe6-413c-8330-9e2d7ad42c7b.run.aws-usw02-pr.ice.predix.io
    conf.hst=wss://ec-gw-eng-tst-aws.digitalconnect.apps.ge.com/agent
    conf.cid=uaaclientv1hokkaido212
    conf.csc=uaaclientsecretv1hokkaido212
    conf.oa2=https://e23c2728-fa42-43ae-ab3d-21ac667729cb.predix-uaa.run.aws-usw02-pr.ice.predix.io/oauth/token
    conf.dur=1200
    conf.lpt=6192
    conf.dbg=true
    conf.cps=5
    conf.plg=true
    conf.vln=true
    conf.rpt=22,5432
    AGENT_REV=v1.hokkaido.213
    EC_PPS=aeb692b462c10df1ca1aa1cfd6b51f18dd5f052f50d5153b07c2c85d0cbeb2cb716f0712b220a186ce2f2669cf5df1b2
    plg.typ=vln
  agtK8Config:
    # some cluster instances require resource-spec for the deployment, e.g. GE Digital
    # PCS CF1/CF3 Cluster, whereas some can simply ignore the usage.
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    svcPortNum: 8080
    svcHealthPortNum: 8081
    # Following properties related to load balancer
    # statefulset fields are optional for deploying agent alone.. mandatory for agent with load balancer
    # options v1.1beta|v1|v1beta
    releaseTag: v1
    # A download-able url for an "decrypted" agent binary that will be used as
    # the connectivity runtime in the target environment
    # binaryURL: https://github.com/EC-Release/sdk/releases/agent
    # specify an agent revision in the container runtime
    agentRev: v1.hokkaido.213
    # The OCI spec uses the "ownerHash" to bypass the passphrase prompt which is required to decrypt-
    # the artifact in a runtime environment. This is mandantory value for releases v1.hokkaido.213+
    # follow the steps to generate the hash-
    # https://github.com/EC-Release/sdk/blob/disty/scripts/api/README.md#hash-types
    ownerHash: aeb692b462c10df1ca1aa1cfd6b51f18dd5f052f50d5153b07c2c85d0cbeb2cb716f0712b220a186ce2f2669cf5df1b2
    # replicaCount currently supports client instances only.
    # supporting scaling gateway/server instances in k8s is in discussion.
    replicaCount: 1
    # withIngress decides the availability of the agt ingress obj in deployment.
    # by default, when deploy as the gateway mode (conf.mod=gateway), the value (enabled) will be overridden to true
    withIngress:
      enabled: false
      # host utilised to make the agt accessible via non-tls traffic.
      # it is also possible for the co-existence and the overlap of both tls/non-tls routings (hosts/tls)
      hosts:
        - host: ec-gw-eng-dev-aws.digitalconnect.apps.ge.com
          paths: ["/"]
      # present if the agt is accessible via wss|https.
      # example empty array below indicates no tls assignment is avaialble
      # tls: []
      tls:
        - secretName: tls-secret-1
          hosts: ["ec-gw-eng-dev-aws.digitalconnect.apps.ge.com", "ec.rel.ge.com"]
        - secretName: tls.secret-2
          hosts: ["*.ec.https.ge.com", "ec.dev.azure.com"]
    # options below are applicable only in the agent+plugins helm package.
    # this setting is intended to deploy a plugin alongside the agent when "-plg" is present or is "true"
    withPlugins:
      # the tls setting only valid when agent mode "-mod" is either "server" or "gw:server"
      tls:
        enabled: false
        schema: https
        hostname: twitter.com
        tlsport: 443
        proxy: http://traffic-manipulation.job.security.io:8080
        port: 17990
      # the vln setting only valid when agent mode "-mod" is either "client" or "gw:client"
      vln:
        # The "enabled" keypair will be overridden by the "agtConfig" setting, if specified. E.g. "conf.vln=true"
        enabled: true
        # the "remote" keypair indicates the vlan deployment strategy. When default to true,
        # the vlan setup will ignore the "ips" setting, and instead simulate only the "ports"-
        # setting via a series of service/pod remote to the client application. In the remote-
        # scenario, it is subject to the client app's configuration in its respective pod in order-
        # to make the "ips" setting work correcly. Otherwise the setup will deploy the plugin artifact-
        # along with the ips/ports setting, and assume the direct interaction with the local loopback-
        # interface at the parental pod.
        remote: false
        # customise the securityContext when the vln plugin launched in a multi-contr pod (remote: false)
        securityContext:
          # map the container runner to an internal user. E.g. uid: 1000
          runAsUser: 0
          # deny a potential privilege escalation request
          allowPrivilegeEscalation: false
          privileged: false
        # The "ports" keypair will be overridden by the default "agtConfig" setting, if specified. E.g. "conf.rpt=<port1,port2..portn>"
        ports: [22,5432]
        # The "ips" keypair is ignored when set "remote" to true
        ips: ["3.202.30.125/32","192.168.1.200/32"]
